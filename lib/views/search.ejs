<%
  RESULTS_PER_PAGE = 40
  MAX_PAGES = 15

  if (page > MAX_PAGES - 1) throw "Illegal page"

  var sentence2result = {}
  var count = 0
  var sentenceCount = 0
  var start = page * RESULTS_PER_PAGE
  var finish = page * RESULTS_PER_PAGE + RESULTS_PER_PAGE + 1

  for (var r in raw) {
    var result = raw[r]
    var matches = result.matches
    var textName = result.name

    count += matches.length
    for (var m in matches) {
      if (sentenceCount > RESULTS_PER_PAGE * MAX_PAGES) break
      var match = matches[m]
      var root = match
      while (root.parentNode)
        root = root.parentNode
      if (result = sentence2result[match.attributes.sentenceId])
        result.matches[match.uuid()] = true
      else {
        var nodes = [root]
        var i = 0
        while (nodes.length > i)
          nodes = nodes.concat(nodes[i++].children)
        nodes = nodes.sort(function (node1, node2) { return node1.attributes.id - node2.attributes.id })

        var lines = []
        var currentLineNumber = null
        for (var n in nodes) {
          var node = nodes[n]

          var lineNumber = node.attributes.line
          if (lineNumber != currentLineNumber) {
            lines.push(line = [])
            var prev = node
            while (prev.previousSiblingInLine)
              line.unshift(prev = prev.previousSiblingInLine)

            line.push(node)

            var nxt = node
            while (nxt.nextSiblingInLine)
              line.push(nxt = nxt.nextSiblingInLine)
            currentLineNumber = lineNumber
          }
        }
        sentence2result[root.attributes.sentenceId] = {
          lines: lines,
          matches: {},
          text: textName,
          book: root.attributes.book,
        }
        sentence2result[root.attributes.sentenceId].matches[match.uuid()] = true
        sentenceCount++
      }
    }
  }

  var results = []
  for (var r in sentence2result)
    results.push(sentence2result[r])
  var items = results.length
  results = results.slice(start, finish)
%>
<% include head %>
  <div class="hero-unit ">
    <h1>Structural Search</h1>
    <p>Perform grammatical and syntactical searches on the Perseus Greek Treebank. To get started, <a href="https://github.com/nkallen/pseudw/wiki/Structural-Search">read the query guide</a> and then <a href="https://github.com/nkallen/treebank-greek/blob/master/docs/guidelines.pdf?raw=true">read about dependency trees.</a></p>
    <form action="/search">
      <fieldset>
        <div class="input-append">
          <input type="text" name="query" class="input-block-level input-xxlarge" value="<%= query %>">
          <button type="submit" class="btn">Search</button>
        </div>
        <div class="btn-group" data-toggle="buttons-checkbox">
          <% for (var t in textNames) { %>
            <% var textName = textNames[t] %>
            <label class="checkbox inline">
              <input name="texts" value="<%= textName %>" type="checkbox" <% if (selectedTextNames.indexOf(textName) > -1) { %> checked="checked" <% } %>>
              <%= textName %>
            </label>
          <% } %>
        </div>
      </fieldset>
    </form>
    <% if (error) { %>
      <div class="alert alert-error"><%= error %></div>
    <% } %>
    <% if (results.length > 0) { %>
      <div class="alert alert-success">
        <%= count %> results in <%= time %>ms.
      </div>
      <div class="row">
        <div class="span5">
          <div class="matches text" style="margin-top: 0">
            <% for (var i = 0; i < results.length; i++) { %>
              <% var result = results[i] %>
              <section class="sentence attributes paragraph words">
                <blockquote class="row">
                  <% for (j in result.lines) { %>
                    <% var line = result.lines[j] %>
                    <% for (k in line) { %>
                      <%
                        var word = line[k];
                        var attributes = word.attributes;
                      %>
                      <% if (result.matches[word.uuid()]) { %> <b> <% } %>
                        <span data-lemma="<%= attributes.lemma %>" data-sentence-id="<%= attributes.sentenceId %>" data-id="<%= attributes.id %>" data-parent-id="<%= attributes.parentId %>" data-part-of-speech="<%= attributes.partOfSpeech %>" data-number="<%= attributes.number %>" data-gender="<%= attributes.gender %>" data-case="<%= attributes.case %>" data-relation="<%= attributes.relation %>" data-person="<%= attributes.person %>" data-tense="<%= attributes.tense %>" data-mood="<%= attributes.mood %>" data-voice="<%= attributes.voice %>"><%= attributes.form %></span>
                      <% if (result.matches[word.uuid()]) { %> </b> <% } %>
                    <% } %>
                    <br />
                  <% } %>
                  <small>
                    <cite title="#{result.text}">
                      <% var book = result.book %>
                      <a href="/<%= result.text %>/books/<%= book %>"><%= result.text %> <%= book ? book + '.' : '' %><%= result.lines[0][0].attributes.line %>-<%= result.lines[result.lines.length-1][0].attributes.line %></a>
                    </cite>
                  </small>
                </blockquote>
              </section>
            <% } %>
          </div>
        </div>
      </div>
      <div class="pagination">
        <ul>
          <% var url = "search?query=" + query + "&texts=" + selectedTextNames.join("&texts=") %>
          <li <% if (page == 0) { %> class="disabled" <% } %>><a href="<% url %>&page=0">&laquo;</a></li>
          <% for (var i = 0; i < Math.min(items / RESULTS_PER_PAGE, MAX_PAGES ); i++) { %>
            <li <% if (page == i) { %> class="active" <% } %>><a href="<%= url %>&page=<%= i %>"><%= i + 1 %></a></li>
          <% } %>
          <li <% if (page >= items / RESULTS_PER_PAGE - 1) { %> class="disabled" <% } %>><a href="<%= url%>&page=<%= page + 1 %>" >&raquo;</a></li>
        </ul>
      </div>
    <% } else if (query && !error) { %>
      <div class="alert">0 results</div>
    <% } %>
  </div>
<% include foot %>